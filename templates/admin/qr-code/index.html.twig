{% extends 'base.html.twig' %}

{% block title %}{{ 'title.qrcode'|trans }}{% endblock %}

{% block main %}
    <div class="col">
        <div class="card">
            <div class="card-body">
                <div class="d-md-flex align-items-center">
                    <div>
                        <h1 class="card-title font-medium p-0">{{ 'title.qrcode'|trans }}</h1>
                    </div>

                    <div class="ms-auto d-flex align-items-center">
                        <div class="dl">

{#                            {{ csrf_token('add_qrcode_token_csrf') }}#}

                            <a href="{{ path('admin_qrcode_new', {token: csrf_token('add_qrcode_token_csrf') }) }}" class="btn btn-sm btn-block btn-success">
                                <i class="fa fa-plus" aria-hidden="true"></i> {{ 'user.label.new_qrcode'|trans }}
                            </a>
                        </div>
                    </div>
                </div>

                <div class="table-responsive">
                    <table id="qrcode" class="table table-striped table-middle-aligned">
                        <thead>
                        <tr>
                            <th></th>
                            <th>{{ 'qrcode.label.id' | trans }}</th>
                            <th>{{ 'qrcode.label.uuid' | trans }}</th>
                            <th>{{ 'qrcode.label.user' | trans }}</th>
                            <th>{{ 'qrcode.label.client' | trans }}</th>
                            <th>{{ 'qrcode.label.memory' | trans }}</th>
                            <th>{{ 'qrcode.label.status' | trans }}</th>
                            <th>{{ 'qrcode.label.img' | trans }}</th>
                            <th>{{ 'qrcode.label.createAt' | trans }}</th>
                            <th>{{ 'qrcode.label.updateAt' | trans }}</th>
                            <th style="width: 200px">{{ 'label.actions' | trans }}</th>
                        </tr>
                        <tr>
                            <th class="search-column"><a href="javascript:void(0);" class="js--check-all">{{ 'label.check_all'|trans }}</a></th>
                            <th class="search-column"><input type="search" class="form-control form-control-sm" placeholder="{{ 'qrcode.label.id'|trans }}" /></th>
                            <th class="search-column"><input type="search" class="form-control form-control-sm" placeholder="{{ 'qrcode.label.uuid'|trans }}" /></th>
                            <th class="search-column"><input type="search" class="form-control form-control-sm" placeholder="{{ 'qrcode.label.user'|trans }}" /></th>
                            <th class="search-column"><input type="search" class="form-control form-control-sm" placeholder="{{ 'qrcode.label.client'|trans }}" /></th>
                            <th class="search-column"><input type="search" class="form-control form-control-sm" placeholder="{{ 'qrcode.label.memory'|trans }}" /></th>
                            <th class="search-column"><input type="search" class="form-control form-control-sm" placeholder="{{ 'qrcode.label.status'|trans }}" /></th>
                            <th class="search-column"></th>
                            <th class="search-column"></th>
                            <th class="search-column"></th>
                            <th class="search-column"><a href="javascript:void(0);" class="btn btn-xs btn-warning js--download"><i class="fa fa-download"></i> {{ 'label.download_all'|trans }}</a>
                            </th>
                        </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>

    </div>
{% endblock %}


{% block javascripts %}
    {{ parent() }}
    <script>

        $(function () {

            $('#qrcode input[type=search]').click(function(e){
                table.draw();
            });

            $('#qrcode thead tr:eq(1) th').each( function (i) {
                $( 'input', this ).on( 'keyup change', function (e) {
                    e.stopPropagation();

                    if ( typeof t != 'undefined' ) {
                        clearTimeout(t);
                    }

                    var $val = this.value;

                    if ( table.column(i).search() !== $val ) {
                        t = setTimeout(function(){
                            table
                                .column(i)
                                .search( $val )
                                .draw()
                        }, 500)
                    }
                } );
            } );

            var table = $('#qrcode').DataTable({
                orderCellsTop: true,
                autoWidth: false,
                serverSide: true,
                ajax: {
                    url: '{{ path('admin_qrcode_table_index') }}',
                    type: 'post',
                    data: {}
                },
                aLengthMenu: [
                    [100,9999999],
                    [100,"All"]
                ],
                columns: [
                    {data: 'checkBox', name: 'checkBox', searchable: false, sortable: false},
                    {data: 'label', name: 'label'},
                    {data: 'uuid', name: 'uuid'},
                    {data: 'user', name: 'user'},
                    {data: 'client', name: 'client'},
                    {data: 'memory', name: 'memory'},
                    {data: 'status', name: 'status'},
                    {data: 'img', name: 'img'},
                    {data: 'createdAt', name: 'createdAt'},
                    {data: 'updatedAt', name: 'updatedAt'},
                    {data: 'actions', name: 'actions', searchable: false, sortable: false}
                ],
                order: [[1, "desc"]],
                searchDelay: 500,
                language: {
                    paginate: {
                        previous: '{{ 'datatables.previous'|trans }}',
                        next: '{{ 'datatables.next'|trans }}',
                        last: '{{ 'datatables.last'|trans }}',
                        first: '{{ 'datatables.first'|trans }}'
                    },
                    processing: '{{ 'datatables.processing'|trans }}',
                    search: '{{ 'datatables.search'|trans }}',
                    emptyTable: '{{ 'datatables.empty_table'|trans }}',
                    zeroRecords: '{{ 'datatables.empty_table'|trans }}',
                    loadingRecords: '{{ 'datatables.loading_records'|trans }}',
                    info: '{{ 'datatables.info'|trans }}',
                    infoEmpty: '{{ 'datatables.info_empty'|trans }}',
                    infoFiltered: '{{ 'datatables.info_filtered'|trans }}',
                    lengthMenu: '{{ 'datatables.length_menu'|trans }}'
                }
            });
        });


        $('.js--check-all').click(function (e) {

            var qtyCheckBoxes = $('.js--check').length;
            var qtyCheckboxesChecked = 0;

            $('.js--check').each(function () {
                if ($(this).is(':checked')) {
                    qtyCheckboxesChecked++;
                }
            });

            if (qtyCheckBoxes == qtyCheckboxesChecked) {
                $('.js--check').prop('checked', false);
            } else {
                $('.js--check').prop('checked', true);
            }

        });

        var download = function() {
            for(var i=0; i<arguments.length; i++) {
                var iframe = $('<iframe style="visibility: collapse;"></iframe>');
                $('body').append(iframe);
                var content = iframe[0].contentDocument;
                var form = '<form action="' + arguments[i] + '" method="GET"></form>';
                content.write(form);
                $('form', content).submit();
                setTimeout((function(iframe) {
                    return function() {
                        iframe.remove();
                    }
                })(iframe), 2000);
            }
        }

        $('.js--download').click(function () {

            $('.js--check').each(function () {
                if ($(this).is(':checked')) {

                    let el = $(this).closest('.js--editable-parent').find('.js--print');
                    if (el.length) {

                        el.each(async function (index) {
                            let e = $(this)[0];
                            console.log(e.href);

                            //window.open(e.href);
                            // await delay(index * 1000);
                             download(e.href);
                        });


                    }
                }
            });

        });


    </script>



{% endblock %}
